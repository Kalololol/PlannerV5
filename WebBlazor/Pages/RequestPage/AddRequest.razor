@page "/addRequest"
@inject IRequestService _requestService
@inject IDialogService DialogService
@inject NavigationManager NavigationManager


<h3>Dodaj nową prośbę</h3>


<EditForm Model="@request" OnValidSubmit="@InsertRequest">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <td>Data: </td>
    <InputDate id="dayindisposition" @bind-Value="DayIndisposition" required />
    <br />
    <td>Zmiana: </td>
    <label>
        <InputSelect @bind-Value="request.Change" required>
            <option value="D">Dzień</option>
            <option value="N">Noc</option>
            <option value="A">Cały dzień</option>
        </InputSelect>

    </label>
    <br />
    <td>Typ prośby: </td>
    <label>
        <InputSelect @bind-Value="request.TypeRequest" required>
            <option value="W">Praca</option>
            <option value="H">Wolne</option>
        </InputSelect>
    </label>
    <br />
    <br />
    <br />
    <MudButton Variant="Variant.Filled" Color="Color.Success" OnClick="OnButtonClicked">Zapisz</MudButton>
    <MudButton Variant="Variant.Filled" Color="Color.Transparent" OnClick="OnButtonClickedBack">Cofnij</MudButton>

</EditForm>


@code {
    RequestModel request = new();
    public DateTime DayIndisposition = DateTime.Now;

    void OnButtonClickedBack()
    {
        NavigationManager.NavigateTo("/allRequest");
    }

    private async void OnButtonClicked()
    {
        string state = "";
        bool? result = await DialogService.ShowMessageBox(
            "Dodawanie nowego obiektu",
            "Czy na pewno chcesz dodać nowego użytkownika?",
            yesText: "TAK-DODAJ!", cancelText: "ANULUJ");
        state = result == null ? "0" : "1";
        StateHasChanged();
        if (result == true)
        {
            await InsertRequest();
            NavigationManager.NavigateTo("/allRequest");
        }
    }
    private async Task InsertRequest()
    {
        request.DayIndisposition = DayIndisposition;
        await _requestService.AddRequest(request);

    }

}
