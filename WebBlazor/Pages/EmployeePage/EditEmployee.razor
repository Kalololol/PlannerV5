@page "/editEmployee"
@page "/editEmployee/{id:int}"
@inject IEmployeeService _employeeService

<h3>EditEmployee</h3>

<EditForm Model="@result" OnValidSubmit="@OnInitializedAsync">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <body>
    <td>Imię: @employee.Name </td>
    <InputText id="name" @bind-Value="result.Name" required />
    <br />
    <td>Nazwisko: @employee.Surname</td>
    <InputText id="surname" @bind-Value="result.Surname" required />
    <br />
    <td>Adres e-mail: @employee.AddressEmail</td>
    <InputText id="addressemail" @bind-Value="result.AddressEmail" required />
    <br />
    <td>Telefon: @employee.PhoneNumber</td>
    <InputText id="phonenumber" @bind-Value="result.PhoneNumber" required />
    <br />
    <td>Prawo wyk. zawodu: @employee.LicenseNumber</td>
    <InputText id="licensenumber" @bind-Value="result.LicenseNumber" required />
    <br />
    <td>Hasło: @employee.Password</td>
    <InputText id="password" @bind-Value="result.Password" required />
    </body>
    <br />
    <br />
    <button type="submit" @onclick="EmployeeEdit">Zatwierdź zmiany</button>

</EditForm>


@code {
    [Parameter]
    public int Id { get; set; }

    EmployeeModel employee = new();
    EmployeeModel result = new();

    protected override async Task OnInitializedAsync()
    {
        base.OnInitialized();
        employee = await _employeeService.GetEmployeeById(Id);
    }

    private async Task EmployeeEdit()
    {
        result.Id = Id;
        await _employeeService.EditEmployee(result);
    }

}
